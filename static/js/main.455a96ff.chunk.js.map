{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","props","state","activePanel","componentDidMount","bind","id","React","Component","App","useState","setActivePanel","fetchedUser","setUser","size","popout","setPopout","useEffect","a","bridge","sendPromise","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","go","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"mmBAwCeA,E,YA9Bd,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KAEDC,MAAQ,CACZC,YAAa,QAGd,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAPP,E,mHAelB,OACA,kBAAC,IAAD,CAAMF,YAAa,SAClB,kBAAC,IAAD,CAAOG,GAAG,SACT,kBAAC,IAAD,6C,GApBeC,IAAMC,WCgCVC,EAhCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVP,EADU,KACGQ,EADH,OAEcD,mBAAS,MAFvB,mBAEVE,EAFU,KAEGC,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAeI,KAAK,WAHxC,mBAGVC,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,YAAY,uBADvC,OACOC,EADP,OAECR,EAAQQ,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAMH,OACC,kBAAC,IAAD,CAAM/B,YAAaA,EAAaY,OAAQA,GACvC,kBAAC,EAAD,CAAMT,GAAG,OAAOM,YAAaA,EAAauB,GANjC,SAAAC,GACVzB,EAAeyB,EAAEC,cAAcC,QAAQC,SCrBzCpB,IAAOqB,KAAK,gBAQZC,IAASC,OAAO,kBAAC,EAAD,MAASf,SAASgB,eAAe,W","file":"static/js/main.455a96ff.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport { PopoutWrapper, ConfigProvider, Panel, PanelHeader, Div , Button , Footer, View , ScreenSpinner , ModalPage , ModalCard , ModalRoot , PanelHeaderButton , ModalPageHeader\n\t, List , Cell , CellButton , InfoRow , Progress , Gallery , Counter , FormLayout , Input , Placeholder , Snackbar , Avatar , Group , Alert, Epic, Tabbar, TabbarItem, Card, CardGrid, Link\n\t, Tooltip , Tabs , TabsItem, platform, IOS  } from '@vkontakte/vkui';\n\nclass Home extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\n\t\tthis.state = {\n\t\t\tactivePanel: 'main'\n\t\t};\n\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\n\t}\n\t\n\tcomponentDidMount () {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t<View activePanel={\"panel\"}>\n\t\t\t<Panel id=\"panel\">\n\t\t\t\t<PanelHeader>Шахта</PanelHeader>\n\t\t\t</Panel>\n\t\t</View>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}