{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","activePanel","popout","end","cardsMap","cards","maxCards","gold","emerald","iron","cobblestone","componentDidMount","bind","initializeApp","setCards","bridge","subscribe","detail","type","data","console","log","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","setState","send","this","setInterval","min","max","Math","floor","random","i","push","ore1","randInt","resource","card","className","id","onClick","e","currentTarget","split","style","width","height","src","display","alignItems","justifyContent","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a983b76e.chunk.js","sourcesContent":["import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './App.css'\n\nimport { PopoutWrapper, ConfigProvider, Panel, PanelHeader, Div , Button , Footer, View , ScreenSpinner , ModalPage , ModalCard , ModalRoot , PanelHeaderButton , ModalPageHeader\n\t, List , Cell , CellButton , InfoRow , Progress , Gallery , Counter , FormLayout , Input , Placeholder , Snackbar , Avatar , Group , Alert, Epic, Tabbar, TabbarItem, Card, CardGrid, Link\n\t, Tooltip , Tabs , TabsItem, platform, IOS  } from '@vkontakte/vkui';\n\nvar user = null;\n\nclass App extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'main',\n\t\t\tpopout: <ScreenSpinner/>,\n\n\t\t\tend: 0,\n\t\t\tcardsMap: [],\n\t\t\tcards: null,\n\t\t\tmaxCards: 30,\n\t\t\tgold: 'https://i.ibb.co/kHKsYbz/gold.png',\n\t\t\temerald: 'https://i.ibb.co/6bpJt6Y/emerald.png',\n\t\t\tiron: 'https://i.ibb.co/KLs7Pjb/iron.png',\n\t\t\tcobblestone: 'https://i.ibb.co/mvvLWTF/cobblestone.png'\n\t\t};\n\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\n\t\tthis.initializeApp = this.initializeApp.bind(this);\n\t\tthis.setCards = this.setCards.bind(this);\n\t}\n\n\tcomponentDidMount () {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tconsole.log(data);\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t} else if (type === 'VKWebAppGetUserInfoResult'){\n\t\t\t\tthis.setState({ popout: null });\n\t\t\t\tthis.initializeApp();\n\t\t\t}\n\t\t});\n\t\tuser = bridge.send('VKWebAppGetUserInfo');\n\t}\n\n\tinitializeApp() {\n\t\tthis.setCards();\n\t\tsetInterval(()=>{\n\t\t\tvar end = this.state.end-1;\n\t\t\tthis.setState({end});\n\t\t\tif(end<0){\n\t\t\t\tthis.setCards();\n\t\t\t}\n\t\t},1000);\n\t}\n\n\trandInt(min, max) {\n\t\treturn Math.floor(Math.random() * Math.floor(max+1))+min;\n\t}\n\n\tsetCards() {\n\t\tthis.setState({ end: 5 });\n\t\tvar cardsMap = [];\n\t\tfor(var i = 0; i < this.state.maxCards; i++){\n\t\t\tcardsMap.push(i);\n\t\t}\n\t\tthis.setState({ cardsMap});\n\t\tvar cards = [];\n\n\t\tconst { cobblestone, iron, emerald, gold } = this.state;\n\t\tfor(var i = 1; i <= this.state.maxCards; i++){\n\t\t\tvar ore1 = this.randInt(0,1);\n\t\t\tvar resource = i%this.randInt(i, this.state.maxCards-5-i)===0 ? (ore1===0 ? gold : emerald) : (ore1===0 ? cobblestone : iron);\n\t\t\tvar card = <div className={\"card\"} id={\"card_\"+(i-1)+'_'+resource} onClick={(e)=> {\n\t\t\t\tvar cards = this.state.cards;\n\t\t\t\tvar id = e.currentTarget.id.split('_');\n\t\t\t\tcards[id[1]] = <div className={\"card\"}/>;\n\t\t\t\tthis.setState({cards: cards});\n\t\t\t}} style={{ width: 50, height: 50}}><div className={\"card_content\"}> <img src={resource} style={{height: \"80%\"}}/></div></div>;\n\t\t\tcards.push(card);\n\t\t}\n\t\tthis.setState({ cards });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t<Panel id=\"main\">\n\t\t\t\t\t<PanelHeader>Шахта</PanelHeader>\n\t\t\t\t\t<Div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n\t\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n\t\t\t\t\t\t\t<div className={\"grid\"}>\n\t\t\t\t\t\t\t\t{this.state.cards}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Div>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<Footer>\n\t\t\t\t\t\t\tДо перезагрузки: {this.state.end}\n\t\t\t\t\t\t</Footer>\n\t\t\t\t\t</Div>\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}